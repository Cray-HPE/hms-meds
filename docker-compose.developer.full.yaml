---
version: '3.7'
#THIS environment sets up all of MEDS
#  All dependencies -> HSM (vault), RTS (red fish sims) are all setup and active.
#  The ports are exposed to the local system.
networks:
  rts:
services:
  etcd:
    image: arti.dev.cray.com/third-party-docker-stable-local/coreos/etcd:v3.4.7
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
    ports:
      - 2379:2379
      - 2380:2380
    networks:
      - rts
  meds-init:
    build:
      context: .
      dockerfile: Dockerfile.compose
    command: ["vault_loader"]
    environment:
      - HSM_URL=http://cray-smd:27779/hsm/v1
      - MEDS_OPTS=""
      - CRAY_VAULT_AUTH_PATH=auth/token/create
      - CRAY_VAULT_ROLE_FILE=configs/namespace
      - CRAY_VAULT_JWT_FILE=configs/token
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=hms
      - VAULT_KEYPATH=hms-creds
      - VAULT_SKIP_VERIFY=true
      - MEDS_NTP_TARG=""
      - MEDS_SYSLOG_TARG=""
      - MEDS_NP_RF_URL="/redfish/v1/Managers/BMC/NetworkProtocol"
      - MEDS_ROOT_SSH_KEY=""
    networks:
      - rts
  meds:
    build:
      context: .
      dockerfile: Dockerfile.compose
    environment:
      - HSM_URL=http://cray-smd:27779/hsm/v1
      - "MEDS_OPTS=-sls http://cray-sls:8376/v1"
      - CRAY_VAULT_AUTH_PATH=auth/token/create
      - CRAY_VAULT_ROLE_FILE=configs/namespace
      - CRAY_VAULT_JWT_FILE=configs/token
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=hms
      - VAULT_KEYPATH=hms-creds
      - VAULT_SKIP_VERIFY=true
      - MEDS_NTP_TARG=""
      - MEDS_SYSLOG_TARG=""
      - MEDS_NP_RF_URL=/redfish/v1/Managers/BMC/NetworkProtocol
      - MEDS_ROOT_SSH_KEY=""
    networks:
      - rts
    depends_on:
      - sls-init
      - cray-sls-preload
      - vault
  sls-init:
    image: arti.dev.cray.com/csm-docker-master-local/cray-sls:latest
    command: ["sls-init"]
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - DBOPTS=sslmode=disable
      - DBUSER=slsuser
    depends_on:
      - hmsds-postgres
    networks:
      - rts
  cray-sls:
    image: arti.dev.cray.com/csm-docker-master-local/cray-sls:latest
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - DBOPTS=sslmode=disable
      - DBUSER=slsuser
      - CRAY_VAULT_AUTH_PATH=auth/token/create
      - CRAY_VAULT_ROLE_FILE=configs/namespace
      - CRAY_VAULT_JWT_FILE=configs/token
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=hms
      - VAULT_KEYPATH=hms-creds
    ports:
      - "8376:8376"
    depends_on:
      - hmsds-postgres
      - sls-init
      - vault
    networks:
      - rts
  cray-sls-preload:
    image: arti.dev.cray.com/csm-docker-master-local/cray-sls:latest
    command: >
      sh -c "sleep 5 &&
      curl  -d '{\"Xname\":\"x1000\",\"Type\":\"comptype_cabinet\",\"Class\":\"Mountain\",\"TypeString\":\"Cabinet\",\"ExtraProperties\":{\"Networks\":{\"cn\":{
        \"HMN\":{\"CIDR\":\"10.104.0.1/22\",\"Gateway\":\"10.104.3.254\",\"VLan\":3001},
        \"NMN\":{\"CIDR\":\"10.100.0.1/22\",\"Gateway\":\"10.100.3.254\",\"VLan\":2001}},
        \"ncn\":{}}}}' http://localhost:8376/v1/hardware"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - DBOPTS=sslmode=disable
      - DBUSER=slsuser
      - CRAY_VAULT_AUTH_PATH=auth/token/create
      - CRAY_VAULT_ROLE_FILE=configs/namespace
      - CRAY_VAULT_JWT_FILE=configs/token
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=hms
      - VAULT_KEYPATH=hms-creds
    depends_on:
      - cray-sls
    networks:
      - rts
  postgres:
    hostname: postgres
    image: arti.dev.cray.com/third-party-docker-stable-local/postgres:11-alpine
    environment:
      - POSTGRES_USER=slsuser
      - POSTGRES_DB=sls
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5433:5432"
    networks:
      - rts
  s3:
    image: arti.dev.cray.com/third-party-docker-stable-local/minio/minio:RELEASE.2020-04-10T03-34-42Z
    hostname: s3
    environment:
      MINIO_ACCESS_KEY: s3-access-key
      MINIO_SECRET_KEY: s3-secret-key
    command: server /data
    ports:
      - "9000:9000"
    networks:
      - rts
  s3-init:
    image: arti.dev.cray.com/third-party-docker-stable-local/minio/mc:latest
    hostname: s3-init
    environment:
      - MC_HOST_S3=http://s3-access-key:s3-secret-key@s3:9000
    command: mb S3/fw-update
    depends_on:
      - s3
    networks:
      - rts
  vault:
    hostname: vault
    image: arti.dev.cray.com/third-party-docker-stable-local/vault:1.5.5
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=hms
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
      - VAULT_LOG_LEVEL=trace
      - VAULT_ADDR=http://127.0.0.1:8200
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    networks:
      - rts
  vault-kv-enabler:
    #TODO: need to build and push this image to Artifactory
    image: dtr.dev.cray.com/hms/vault-kv-enabler:1.4.0
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=hms
      - KV_STORES=hms-creds,reds-creds,secret
    depends_on:
      - vault
    networks:
      - rts
  redis:
    image: arti.dev.cray.com/third-party-docker-stable-local/redis:5.0-alpine3.12
    hostname: hms-redfish-redis
    ports:
      - "6379:6379"
    networks:
      - rts
  hmsds-postgres:
    hostname: hmsds-postgres
    image: arti.dev.cray.com/third-party-docker-stable-local/postgres:11-alpine
    environment:
      - POSTGRES_PASSWORD=hmsdsuser
      - POSTGRES_USER=hmsdsuser
      - POSTGRES_DB=hmsds
    ports:
      - "5432:5432"
    networks:
      - rts
  cray-smd-init:
    image: arti.dev.cray.com/csm-docker-master-local/cray-smd:latest
    command: ["smd-init"]
    entrypoint: ["/entrypoint.sh"]
    environment:
      - SMD_DBHOST=hmsds-postgres
      - POSTGRES_HOST=hmsds-postgres
      - POSTGRES_PORT=5432
    depends_on:
      - hmsds-postgres
    networks:
      - rts
  cray-smd:
    image: arti.dev.cray.com/csm-docker-master-local/cray-smd:latest
    environment:
      - POSTGRES_HOST=hmsds-postgres
      - POSTGRES_PORT=5432
      - RF_MSG_HOST=kafka:9092:cray-dmtf-resource-event
      - CRAY_VAULT_AUTH_PATH=auth/token/create
      - CRAY_VAULT_ROLE_FILE=configs/namespace
      - CRAY_VAULT_JWT_FILE=configs/token
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=hms
      - VAULT_KEYPATH=hms-creds
      - SMD_WVAULT=true
      - SMD_RVAULT=true
    hostname: cray-smd
    depends_on:
      - cray-smd-init
      - vault
    ports:
      - "27779:27779"
    networks:
      - rts
  zookeeper:
    #TODO: need to push this image to Artifactory
    image: dtr.dev.cray.com/confluentinc/cp-zookeeper:5.4.0
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - rts
  kafka:
    #TODO: need to push this image to Artifactory
    image: dtr.dev.cray.com/confluentinc/cp-kafka:5.4.0
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - rts
  cray-hms-hmcollector:
    image: arti.dev.cray.com/csm-docker-master-local/hms-hmcollector:latest
    environment:
      - LOG_LEVEL=TRACE
      - SM_URL=http://cray-smd:27779
      - POLLING_ENABLED=false
      - RF_SUBSCRIBE_ENABLED=false
      - REST_PORT=80
      - VAULT_TOKEN=hms
      - CRAY_VAULT_JWT_FILE=configs/token
      - CRAY_VAULT_ROLE_FILE=configs/namespace
      - CRAY_VAULT_AUTH_PATH=auth/token/create
      - VAULT_ADDR=http://vault:8200
    volumes:
      - ./configs/kafka_brokers.json:/configs/kafka_brokers.json
      - ./configs/namespace:/configs/namespace
      - ./configs/token:/configs/token
    networks:
      - rts
  dummy-endpoint:
    build:
      context: .
      dockerfile: Dockerfile.dummy-endpoint
    hostname: x1000c1s1b0
    environment:
      - SCHEMA_VERSION=2019.1
      - LOG_LEVEL=TRACE
    ports:
      - "443:443"
    networks:
      rts:
        aliases:
          - x1000c1s1b0